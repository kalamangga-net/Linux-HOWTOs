  Wearable-HOWTO.
  Lionel, trollhunter Bouchpan-Lerust-Juéry <trollhunter@lin­
  uxfr.org>

  v0.0.9 November 2000

  Nomadism is one of the major trends of our society, now most of the
  people can work with a laptop computer, but few did the next step: to
  live, or if you prefer to wear one computer that is a wearable.
  ______________________________________________________________________

  Table of Contents



  1. Foreword

  2. What is a Wearable anyway ?

  3. Advocacy

     3.1 Why ?
     3.2 The Wearable concept is not a revolution, it is just an evolution.
     3.3 The Wearable may give its user an edge.
     3.4 The Wearable concept: a stealth menace.
     3.5 Wearable computing: an emerging industry.

  4. What CPU ?

     4.1 PDA based Wearables
     4.2 PC/104 and laptop based Wearables.
        4.2.1 What is PC/104 ?
        4.2.2 What about PC/104-plus ?
     4.3 Transmeta's processor the Crusoe.
     4.4 Misc

  5. Power supply

  6. OS.

  7. The Sulawesi project.

     7.1 Background
     7.2 The Sulawesi Architecture
        7.2.1 The input stage
        7.2.2 The core stage
        7.2.3 The output stage
     7.3 Sentence translations
     7.4 Summary

  8.
  CLI only
     8.1 What is CLI?
     8.2 Why does one talk about CLI here?
     8.3 What can be done in text-mode?
     8.4 Bunch of utilities
        8.4.1 Shell and script-language
        8.4.2 Must I learn sed and AWK?
        8.4.3 Redundancies in utilities?
     8.5 Aliases or scripts?

  9. Input

     9.1 Variations around the keyboard
        9.1.1 Mini keyboards
        9.1.2 One hand keyboard.

  10. Audio Output

  11. Visual Output

     11.1 Head Down displays.
        11.1.1 Wristwatch type
           11.1.1.1 Commercial Solutions.
           11.1.1.2 The Wristwatchcomputer.
        11.1.2 PDA type
     11.2 Head UP displays
        11.2.1 Obstrusives displays
           11.2.1.1 Hacks with LEDs
           11.2.1.2 Sony GLASSTRON
           11.2.1.3 The M1
           11.2.1.4 The VRD ( Virtual Retinal Display )
        11.2.2 Nonobstrusives displays

  12. Comms

  13. How can I have my Wearable ?

     13.1 Commercial Solutions.
     13.2 Do it yourself.

  14. PalmPilot and its clone  ( IBM, HandSpring, TRG ): a new breed of wearables.

     14.1 The palm family.
     14.2 PDAs runing Linux.

  15. How to carry my wearable ?

  16. Applications with Wearables.

     16.1 In the army now.
     16.2 At the hospital
     16.3 With the firefighters
     16.4 Wearable for the disabled.

  17. A borg's life.

  18. Nanotechnology: one step beyond.

  19. Sources of Information.

     19.1 Non commercial
     19.2 Commercial.
     19.3 Reading.

  20. To do List.

  21. Revision History.

  22. Thanks and Credits.

  23. Copyright, Disclaimer and Trademarks



  ______________________________________________________________________

  1.

  Foreword

  I am not a guru in wearable computing, simply after some years using
  HP95LX and HP200LX palmtop computers more like  wearables than like a
  PDA ( thanks to DOS 5, the HP200LX even allowed me to do a semester CS
  project using turbo pascal while commuting in the subway ),  and
  living with a palm IIIx and a laptop running Linux, to me the next
  step is having a wearable running Linux, thus I have spent more than a
  year reading various informations on wearable and taking a little part
  in the wear-hard mailing list. As more an more people will be
  interested in the wearable concept I have decided to start this HOWTO
  in order to help them ( At the time of this writing I am building my
  own wearable using my laptop ( Toshiba 430CDT ) with a twiddler
  keyboard, emacspeak, and camcorders batteries. )

  Some people may, at least, be surprised to find the "In the army now"
  section so I would like to explain my position: I am trying to write
  this HOWTO both as a journalist and a scientist would do: this implies
  as a journalist to look for information from every source available,
  and as a scientist to be neutral: and as the US Army is willing to
  purchase more than 30.000 units one can hardly overlook this user
  group.  This document is  intended to be the starting point of a long
  term work. If you have any information ( that can be checked ) that
  you think is of interest, do not hesitate contact me.



  2.  What is a Wearable anyway ?

  Well, as it name implies a wearable is a computer you are supposed to
  wear, actually very few wearables fill this definition. On a more
  practical point of view one can define a wearable as a computer you
  can use on the run relying only on its  power supply ( see the power
  supply section for more information ). So with such a definition PDAs,
  palmcomputers, customized laptops are wearables too. As Wearable
  computing is a new field, there is no standard definition for a
  Wearable computer, but you may find Professor Steve Mann's definition
  very . To me medical devices such as pacemakers too are Wearable
  computers and they don't fit in Professor Steve Mann's definition
  <http://wearcomp.org/wearcompdef.html> ( actually Professor Steve Mann
  is one of the Pionneers in Wearable computing ) On the Wearcomp
  website there is also a   FAQ  <http://wearcomp.org/wearcompfaq.html>
  trying to define what a Wearable is.

  I am not a specialist in wearables, simply I have a very strong
  interest in nomadic computing and I studying a lot its implementations
  both from a technical point of view and from the way nomadic computing
  is going to change our every day life and the way we interacts as we
  are getting more and more connected.

  This text is included in the LINUX DOCUMENTATION PROJECT
  http://www.linuxdoc.org/HOWTO <http://www.linuxdoc.org/HOWTO> .

  The latest version of this document is available in HTML format at
  http://infonomade.linuxfr.org/Wearable-HOWTO.html
  <http://infonomade.linuxfr.org/wearable/Wearable-HOWTO.html> or at
  http://www.thewearables.com/mirrors/Wearable-HOWTO/Wearable-HOWTO.html

  , you can retrieve the postcript format at

  http://www.thewearables.com/mirrors/Wearable-HOWTO/Wearable-
  HOWTO.ps.gz


  If you wish to mirror it or to translate it, please contact me.

  Lionel, Trollhunter Bouchpan-Lerust-Juéry <trollhunter@linuxfr.org> or
  at <boucli27@altavista.net>



  3.

  Advocacy

  Some people may want to know why you want to build a wearable or you
  may have to sell your idea to the people who are responsible for the
  purchase.  Here are some ideas you may use.



  3.1.

  Why ?

  Because, you want to experiment by yourself, because you think that
  Human Computer Interaction is not a matter of designing the n-th
  windowmanager, because you feel that enhanced reality is the cutting
  edge of your evolution.



  3.2.

  The Wearable concept is not a revolution, it is just an evolution.

  Some people are afraid of revolutionary or so called products, thus
  the good news is that the wearable may look like a revolutionary
  concept but it is actually just an evolution of the computing
  hardware.  Let me explain that : At first there was the Mainframe,
  then came the desktop computer enabling people to work in their
  office, latter the PC enabled these people to work at home too, as
  time passed the portable PC enabled people to work in a Hotel room, or
  everywhere they could find a power plug ( yes an Osborne or an IBM's
  convertible were definitively not laptop computers ), at the same time
  some pocket computers appeared on the market : Sharp PC1500, Canon
  X07, Casio PB100 then the first one weighted less and less, the second
  one disappeared but the LCD screen was, with other things their legacy
  allowing the laptop to emerge, as the laptop went mainstream, its size
  went smaller allowing people to work in the train, at the library ...,
  then palmtop PC's such as the HP95LX and PDA's appeared, ( at this
  time the most successful is the PalmPilot family and its clones )
  allowing people to work on the move, so the wearable is just the next
  step in this move towards miniaturization.  ( If you want to learn
  more about Laptops and Linux you should read the Laptop-HOWTO, the
  latest version can be found at Werner's Heuser Homepage
  <http://www.snafu.de/~wehe/index_li.html> )

  3.3.

  The Wearable may give its user an edge.


  In today's competitive world it is very important to get an edge over
  the other company, thus for example in a plane repair company the
  engineers who are using wearables do not waste time in asking for
  blueprints but instead have the blueprint and the technical data at
  will while performing their job, thus they will be able to repair the
  planes faster. You may choose an example in your job.


  3.4.

  The Wearable concept: a stealth menace.

  When they made their first appearance on the market, some products or
  technologies were, to say the least, less than perfect. This is a
  stealth menace, if you read Clayton Christensen's book "The
  innovator's dilemma: when new technologies cause great firms to fail"
  or Andy's Grove "Only the paranoid survives" you will see that some
  corporations that relies on a product and that have a king of the hill
  may fall down because they overlooked a new product/technology that
  was clumsy at its beginning and was at first in a market niche, then
  the contender took over the market.



  3.5.

  Wearable computing: an emerging industry.

  The people who decide to fund your project are not always very found
  about technical details, thus you will have to use other arguments,
  otherwise your pet project will be sent to /dev/null.  If one reads
  again chapter 2 of AP Sloan's book: "My years with General Motors" it
  is obvious that the Wearable industry is going into the same changes
  as did the automobile industry in the US at the turn of the century :
  it turned from a Hobby with some small manufacturers to a mass market
  Industry. It took nearly 30 years to the automobile industry to
  change, but the wearable industry should have done this changes in
  less than 5 years, so if they don't invest on this product others will
  do.


  4.

  What CPU ?


  4.1.

  PDA based Wearables

  Usually they use non Intel CPU ( except the HP95/100/200LX ) See the
  PalmPilot : a new breed of wearables section.


  4.2.

  PC/104 and laptop based Wearables.

  Theses devices are using usually an Intel or Intel compatible CPU.
  Some model even feature a Cyrix Media GX CPU.


  4.2.1.

  What is PC/104 ?

  PC/104 is an industrial standard, for PC based systems that can be
  stacked together in order to create an embedded system.  The footprint
  of theses boards is 4"x4" so as you can see it is a good base in order
  to start a wearable project.


  4.2.2.

  What about PC/104-plus ?

  It is a PCI addition to the PC/104 standard.  you can read the PC-104
  FAQ <http://www.controlled.com/pc104faq>

  4.3.  Transmeta's processor the Crusoe.

  It seems that Transmeta hasn't build the fastest chip on the market
  but has indeed focused on power saving making its processor and ideal
  choice for a wearable project, moreover it seems that motherboards
  will be available very soon as Phoenix Bios released their Bios for
  this chip.



  4.4.

  Misc

  Last year there were some alpha based Multia sold for around $100, but
  it seemed AFAIK that nobody ever managed to build a wearable around
  one of theses devices.


  5.

  Power supply

  There is plenty of choice as long as you use batteries. But be careful
  __NEVER__ use liquid acid filled batteries it is a Health Hazard for
  this application.


  Now the four main sources for information on batteries and batteries
  are:

  ·  The Sanyo batteries
     <http://www.sanyobatteries.net/NEWprodsIND.html>

  ·  The camcorders batteries; you may browse

  ·  Canon <http://www.usa.canon.com/camcambin/camcorders/8mm/>

  ·  Hitachi <http://www.hitachi.com/products/consumer/audiovisual/>

  ·   JVC batteries <http://www.jvc-
     victor.co.jp/english/vacc/chart/power.html>

  ·  Panasonic <http://www.panasonic.com/host/consumer.html>

  ·  Sony batteries <http://www.sel.sony.com/SEL/rmeg/batteries/>

     and other manufacturer's websites

  ·  The hoby models manufacturers such as

  ·  Graupner <http://www2.graupner.com/>

  ·  Robbe <http://www.robbe.de/en/index.html>

  ·  Tamya <http://www.tamiya.com/english/rc/rcitem/kit/kitb1.htm>

  ·  Radioshack <http://www.radioshack.com/>


  6.

  OS.

  For the people whose Wearable is based on a PDA, there is little
  choice : most of the time they have to do with the PDA's manufacturer
  OS, AFAIK Linux on Psion series 5 is not mainstream.  a commercial
  solution called WindStone primary targeted to palmpilots with a
  project to port it to ARM based computers it is made by OSK
  <http://www.oski.co.kr/>, so and see. For  Mips based PDA
  <http://www.freebsd.org/~imp/pdamips.html> type; some of them seem to
  be able to run NetBSD <http://www.netbsd.org> ( it is a member of the
  *BSD family of unices running on a lot of platforms ).



  For those using a PC derivative, the choice seems to be between
  Microsoft products or Linux, Well,  Microsoft products are not exactly
  the best choice and DEBIAN/GNU Linux is the winner ( I don't think
  that for general purposes one has to use a posix .4 compliant kernel
  ).

  There is another contender QNX <http://www.qnx.com>, but is more
  industrial oriented, so for hobby or research it is not the best
  choice.


  7.

  The Sulawesi project.


  Sulawesi:  An intelligent user interface system for ubquitous
  computing.

  7.1.  Background

  A few years ago, wearable computers were dedicated systems constructed
  by and for a single person. The machine was customised to suit the
  owners personal preferences using alternative input/output devices to
  achieve different interaction techniques, and until now most of the
  interfaces used on these machines have been an amalgamation of
  existing desktop user interface systems and novel input/output
  devices.

  The ideal human-computer interface for use in a mobile/ubiquitous
  environment would be one which listens for its user, understands what
  the user has asked it to do using speech recognition, gestures,
  machine vision and other channels of information, carried out the
  users request automatically, and presented the results back to the
  user when it is most appropriate and in a suitable format. For
  example; a machine which could monitor the users respiratory levels,
  heart rate and movement, the user could ask ``when I fall asleep could
  you turn off those <user pointing> lights''. This type of interaction
  with a mobile device or an ubiquitous environment, using spoken
  sentences and gestures, fall under the category of multi-modal and
  intelligent user interfaces; and Sulawesi is a framework which
  provides a basic multimodal development system.


  7.2.  The Sulawesi Architecture

  The Sulawesi system that has been designed comprises of three distinct
  parts,

  ·  An input stage, which gathers raw data from the various sensors.

  ·  A core stage, which contains a natural language processing module
     and service agents.

  ·  An output stage, which decides how to render the results from the
     service agents.

     Programming API's allow third partys to create new input, service
     and output modules and integrate them with Sulawesi.

  7.2.1.  The input stage

  The system gathers real world information through a well defined API.
  The current implementation includes a keyboard input, a network input,
  a speech recognition input, a video camera input, a G.P.S. input and
  infra-red input.  The inputs do not do any pre-processing of the data,
  they only provide the raw data to the core of the system for
  interpretation by the services within.


  7.2.2.  The core stage

  The core of the system contains a basic natural language processor
  which performs sentence translations. This converts a sentence into a
  command stream from which two pieces of information are extracted,
  which service to invoke and how the output should be rendered. A
  service manager is responsible for the instantiation and monitoring of
  the services, it also checkpoints commands to try and provide some
  kind of resiliance against system failures.  The services produce,
  where possible, a modal neutral output which can be send to the output
  stage for processing.


  7.2.3.  The output stage

  The output stage takes a modal neutral result from a service and makes
  a decision on how to render the information. The decision is made
  based on two criteria, what the user has asked for, and how the system
  percieves the users current context/environment.

  If the user has asked to be shown a piece of information, this implies
  a visual rendition. If the system detects that the user is moving at
  speed (through the input sensors) an assumption can be made that the
  user attention might be distracted if a screen with the results in is
  displayed in front of them. (imagine what would happen if the user was
  driving!).. In this case the system will override the users request
  and would redirect the results to a more suitable renderer, such as
  speech.


  7.3.  Sentence translations

  When humans recognise speech they do not understand every word in a
  sentence, sometimes words are misheard or a distraction prevents the
  whole sentence from being heard. A human can infer what has been said
  from the other words around the ones missed in a sentence, this is not
  always sucessfull but in most cases it is satisfactory for the
  understanding of a conversation.  This type of sentence decoding has
  been called semi-natural language processing and has been implemented
  using a few basic rules, the example below explains how the system
  converts human understandable sentences into commands that the system
  understands :

  ·  could you show me what the time is

  ·  I would like you to tell me the time

     It can be argued that in practice these sentences result in similar
     information being relayed to a user. The request is for the
     machines interpretation of the time to be sent to an appropriate
     output channel, the result is the user receiving the knowledge of
     what the time is. Closer inspection reveals that almost all the
     data in the sentences can be thrown away and the request can still
     be inferred from the resulting information.


  ·  show time

  ·  tell time

     In the example above there has been a reduction to 1/4 and 2/9 of
     the number of words (data) in the sentences, while it can be argued
     that close to 100% of the information content is still intact.

  The system implemented allows sentences to be processed and
  interpreted.  The semi-natural language processing is achieved through
  a self generated lookup table of services and a language
  transformation table.

  The service names have to be unique (due to the restrictions on the
  file system) and this provides a simple mechanism to match a service
  such as ``time'' within a sentence. It is impractical and almost
  impossible to hard code all predefined language transformations, and
  such a system would not be easily adaptable to diverse situations. The
  use of lookup tables provides a small and efficient way in which a
  user can customise the system to their own personal preferences
  without having to re-program or re-compile the sentence understanding
  code. The system knows what the words 'show' and 'tell' mean in the
  sentences by referring to the lookup table to determine which output
  renderer the results should be sent to.

  Example of a lookup file.

  |tell|speak|
  |read|speak|
  |show|text|
  |display|text|
  |EOF|


  The top entry in this lookup table specifies that the first time the
  word "say" is encountered in a sentence the results of the service
  should be sent to the "speak" output renderer.

  The use of lookup tables inherently restricts the use of sentences, in
  order to create a sentence which is to be understood the following
  rule must be adhered to.

  <render type> <service name> <service arguments>



  7.4.  Summary

  The above system enables a sentence like ``I would like you to turn
  the lights on when it gets dark''. The system interprets the sentence
  as a request to invoke the `light' service and to render the output
  using some kind of light controller device to turn on or off the
  lights. There are two points which need to be emphasised here, the
  first is on the machine inferring a meaning from a relatively natural
  sentence rather than the user having to adapt to the machine and
  remember complex commands or manipulate a user interface. The second
  is on the machine being asked to perform a certain task when certain
  conditions are met in the real world, ``when it gets dark'' requests
  that when the computers interpretation of the current lighting
  conditions cross a certain threshold, it should respond and send a
  message to the light controller output.

  The Sulawesi system provides the flexability to achieve this type of
  interaction but it does not provide the underlying mechanisms for
  controlling lighting circuits, that's the part you have to code up
  ;)..


  Online documentation and downloads can be found here:-
  http://wearables.essex.ac.uk/sulawesi/
  <http://wearables.essex.ac.uk/sulawesi/>
  8.  CLI  only



  8.1.  What is CLI ?


  CLI is a shorthand to the Comand Line Interface. When you are
  installing Linux on your computer without X, you will work in CLI-
  mode! Perhaps you will shout "oh... that's horrible", but your
  computer will shout "yeah... I have more %CPU and %mem to work and to
  play!".


  8.2.  Why does one talk about CLI  here?

  Some wearables may have problems with graphics chipsets, disk and
  memory space and battery-life.  If you work in text-mode, you will
  save battery-life and disk usage as well as lot of memory and CPU
  Cycles. And if you don't have to install graphic interfaces, you will
  save a little disk-space too. Consequently, you gain some space for
  your data. But you may feel that in text-mode, nothing can be done.
  As you will see the same things can be done in text-mode and graphic
  environment. Only things are thought differently.


  8.3.  What can be done in text-mode?

  We have to think with what we have few programs who can communicate
  between them by input/output canals. This type of environment implies
  that we must use all our fingers to work,  we can even get rid of the
  mouse.  As in X, you have editors (Vi, Emacs, Jed...), games ( BTW
  wearables are the game by themselves ), viewers/browsers ( ?less,
  ?more, lynx, links ...), file managers ( mc...) and more. Also, some
  people may believe that CLI is cool but it's difficult to learn all
  configurations and options of all commands. The learning curve is
  acutally steeper, but when you have learnt that, you will work faster
  and the faster the work is done the better it is with a wearable .
  We'll see examples which accelerate our personal work.

  8.4.  Bunch of utilities


  8.4.1.  Shell and script-language

  Bases of UNIX are its powerful shells. With shells you can do more
  than the poor batch-language of Microsoft.  UNIX gives a lot of
  powerful shells (tcsh, ksh, bash...), but I always work with sh. I
  know it is old and less featured than its big brothers but it is on
  every Unices. In sh, there are often used functions/commands (echo,
  test). Why do I say that? You can notice that GNU gives a program echo
  and test and I say: "if we can eliminate these programs, we can free
  disk-space... ok, not too much but about 20k.". And some versions of
  sh are very economical.  The language of shell (script) is like a
  small programming language: you can used loops (for, while), user
  interactions (read), I/O (< >)... To learn scripting, you just have to
  type: man sh (or tcsh.... but more complex...).  Stupid example of a
  little script: for i in * .[^.]*; do echo $i; done (simple ls).


  8.4.2.  Must I learn sed  and AWK ?

  In the Unix's world, we hear a lot about AWK and sed. These programs
  are generic and can be used for a lot of things. GNU gives a bunch of
  utilities that can replace sed and AWK (dd, cut, seq, ...).  Why dd
  will you ask ?
  dd have a little function that is fine: conversion low/up case. An
  example:

  There are names in this directory that are in uppercase but you want
  to change them to lowercase. With AWK, you must type: for i in *; do
  mv "$i" "`echo $i | awk '{print tolower($0)}'`"; done; with sed you
  must enumerate all letters; with dd, it's very easy, I think: for i in
  *; do mv "$i" "`echo $i | dd conv=lcase`"; done

  cut is a program to print columns of a text. Also, if you must print
  different columns of a line, you can use cut. cut  performs better
  than AWK in this case if you want the job to be done fastly and
  efficiently because cut is dedicated to this work. For the same task,
  you may use the shell's internal commands too (you can, if you assign
  a value to the IFS variable). Here is an example in AWK, cut and sh.
  We want only to display a list with login : identity fields:

  ·  in AWK:

     awk -F: '{ print $1" : "$5}' /etc/passwd



  ·  with cut:

     while read line; do echo "`echo $line | cut -d: -f 1` : `echo $line | cut -d: -f 5`"; done < /etc/passwd



  ·  only with sh:

     IFS=':'; while read a b c d e f; do echo "$a : $e"; done < /etc/passwd; IFS=' '



  Generally, you haven't to learn AWK. I think that you can always do
  things without AWK. (OK, sometimes, AWK is easier.)

  About sed, the drawback is that you must work with temporary files. If
  you want to save disk-space and to edit files in command-line, you can
  use ex, the script version of vi. Also, sed can be used but not
  necessarily.

  8.4.3.  Redundancies in utilities?

  If disk-space is very important, you can delete certain programs which
  perform task that can be done by others programs. For example: if you
  have to use dd, you don't need cat, if you have vi, you don't need ed
  (help me to find other examples...).



  8.5.  Aliases or scripts?

  Scripts are more powerful than aliases. But scripts eat disk-space and
  are loaded each time they are used. Aliases eat memory-space and if
  you are in CLI, you have all the memory for you! Aliases are faster
  than scripts because they are loaded from memory and not from disk.

  Generally, shells offer you another alternative for aliases/scripts:
  functions. Functions have power of scripts with the convenience to eat
  only memory-space. To learn aliases and functions, you can look at the
  manpages.



  9.

  Input


  9.1.

  Variations around the keyboard


  9.1.1.

  Mini keyboards

  Usually theses devices are on the wearer's forearm or wrist.

  The WristPC <http://www.pfuca.com/products/hhkb/hhcindex.html>
  Keyboard  and the Arm mount micro keyboard
  <http://www.ivpgi.com/1accessory.htm> from the Phoenix Group Inc.  are
  typical from this concept.


  9.1.2.

  One hand keyboard.

  IMHO it is the best concept because it doesn't require you to look at
  the keyboard while typing is the less intrusive when you have to deal
  with other people, and in order to be accepted by other a Wearable
  wearer's must have the lowest visual signature.

  The archetype of this concept are the Twiddler and Twiddler2
  <http://www.handykey.com> and all of their clones.

  At first using a twiddler may seem to be a little bit confusing. The
  very first thing to do is to read the manual ( don't forget to plug
  the keyboard or the PS/2 adaptator or your twiddler won't work because
  it will get no power supply. ) The reference card may, at first, seem
  confusing because when you are working with your twiddler you are
  behind the buttons and the reference card show you the buttons from
  the front side not from the rear so you will have to switch right and
  left. When you have passed theses steps you will quickly learn how to
  use it and IMHO it feels very comfortable to use. The way the
  integrated mouse operates is very natural too.



  10.

  Audio Output

  When your system doesn't output too much data, or in order to signal
  some special events an audio output can do the job.  Most laptops come
  with a Sound Blaster compatible sound card and a lot of PC-104 cards
  are sold with such a sound card on board or you should buy a sound
  module. The next step is to redirect your text output to a
  text_to_speak program.

  As a lot of input is done using emacs, it seems to be a good idea to
  use  Emacsspeak
  <http://www.cs.cornell.edu/home/raman/emacspeak/emacspeak.html>



  11.

  Visual Output



  11.1.

  Head Down displays.

  11.1.1.

  Wristwatch type


  11.1.1.1.  Commercial Solutions.

  Some manufacturers ( eg Seiko, Citizen, Casio ) manufactured
  Wristwatches that could be linked to a computer, ( I remember that in
  1982 Seiko showed a prototype of a wirstwatch TV ( monochrome LCD )).


  Casio  <http://www.casio.com> has a broad set of wristwatches, some of
  them could be descibed as Wearables that can display time among other
  things, of interest are the

  ·  The PC Unite that can exchange data with a computer using an infra
     red link.

  ·  The ATC1200-1V Forester features an electronic compass.  plus
     thermometer and barometer. I used to own one of these it is a great
     piece of hardware

  ·  The Technowear products have different features including voice
     recording, IR remote control, Databank...

  ·  The GPS  <http://205.158.10.200/gps/top.html>watch is one of the
     most intruiging watch I have ever seen


  11.1.1.2.  The Wristwatchcomputer.

  In 1998 S. Mann displayed a Wristwatch
  <http://www.wearcam.org/wristwatchcomputer/>videoconferencing
  computer, it runs GNU/Linux and uses an XF86 Server, there is a
  pinhole video camera on the watch itself. This device is to say the
  least impressive, some of the software, is downlable
  <http://www.wearcam.org/orbits/orbits_v1.08.tar.gz> and GPLed.


  It is also possible to use a 4 lines LCD display connected to the
  serial port of your laptop ( numerous paper or online electronics
  magazine offer schematics ).


  11.1.2.

  PDA type

  PDA's seem to be a cheap and efficient way of sending and displaying
  data for a wearable, actually any PDA with a VT100 emulation program
  and a serial link can be used effectively as a terminal ( I have
  successfully used my HP200LX running kermit
  <http://www.columbia.edu/kermit>


  as a terminal for my desktop, giving me an emergency access to it if
  the display failed )



  11.2.

  Head UP displays

  The distinction between obstrusives an non obstrusives ones is not
  from the wearer point of view but from the other people, that is is
  the display forbid to see the wearer's eyes

  11.2.1.

  Obstrusives displays


  11.2.1.1.

  Hacks with LEDs

  Some people managed to use blinking LEDs in order to retrieve
  information from their device. This is one of the simplest display one
  can imagine : a LED or a row of LED blinking.


  11.2.1.2.

  Sony GLASSTRON

  Sony sells a device called the Glasstron; in Paris, France the FNAC
  Montparnasse sells the PVD-V30 glasstron 55 at 13999F ( this is about
  US $2333 ).


  11.2.1.3.  The M1

  Tekgear <http://www.tekgear.ca/displays/m1.html> manufactures the M1.


  11.2.1.4.

  The VRD ( Virtual Retinal Display )

  With this device a manufactured by Microvison <http://www.mvis.com> a
  LASER LED draws the image on the wearer's retina, the US Navy tested
  it in the summer 1999, at Hawaii ( see in the army now ).

  11.2.2.

  Nonobstrusives displays

  The Microptical  <http://www.microopticalcorp.com>corporation
  manufactures two displays the Integrated Eyeglass display and the
  ClipOn display.

  12.

  Comms

  AFAIK Most of the time it is with a radio link, should it be with a
  radio transceiver or via a cell phone.

  It seems that IBM's Personal Area Network
  <http://www.research.ibm.com/research/pan.html> or the Bluetooth
  <http://www.bluetooth.com.> technology will enable building LANs of
  Wearables very easyly. ( actualy IBM is also a member of the Bluetooth
  SIG ).


  13.

  How can I have my Wearable ?


  13.1.

  Commercial Solutions.

  Some companies sells Wearables ready to use out of the Box, hereafter
  is a list of them.


  ·  Genesys Technology  <http://www.genesistech2000.com/product.html>
     manufactures a Wearable that uses a HMD display.

  ·  handsfreemobile  <http://www.handsfreemobile.com> sells the Mid
     Riff Brain, it is mostly an LCD touchpad based solution and the
     unit is in a pouch fixed on the waistband.

  ·  Teltronics  <http://www.teltronics.com/is/hardware.html > sells the
     Mentis. It is a modular wearable.

  ·  Via  <http://www.flexipc.com/ > sells the VIA II PC a Wearable that
     is worn on the waistband.

  ·  Xybernaut  <http://www.xybernaut.com/F00005.htm > sells the Mobile
     Assistant IV ( MA IV ) available with RedHat Linux 6.1, Suse Linux
     ,Windows 9x and Windows NT4

  13.2.

  Do it yourself.

  As wearable computing is in its very early beginning you should make
  various experiments and share them with your peers.  Doing this with
  an open and versatile OS such as Linux should give you a lot of fun (
  after all, desktop computer is just a plain vanilla computer), because
  you play with both the OS and the hardware.  If you are unsure of the
  technical decisions you are going to make, you can start with a proven
  design. On the net you can find the specifications of some wearable
  systems thus you will not have to reinvent the wheel and you will
  avoid some pitfalls. ( the designs are sorted by alphabetical order ).



  ·  The Lizzi  <http://wearables.www.media.mit.edu/projects/wearables>
     ; it is the MIT's wearable design.

  ·  In the UK you can find the Vase Lab Wearable
     <http://wearables.essex.ac.uk/spec/wear-spec.html> it is from Neil
     Newman at the University of Essex.

  ·  In Canada, the Wearcomp  <http://www.wearcomp.org/wearhow/> is a
     proven design, by Prof. Steve Mann at the University of Toronto.


  14.

  PalmPilot and its clone  ( IBM, HandSpring, TRG ): a new breed of
  wearables.
  14.1.  The palm family.

  The PalmPilot family and its clone is a hit among PDAs, but less known
  is the fact that it is more than a PDA it is one of the first off the
  shelves wearable.  You can connect it to your cell phone, When on the
  move you may need an input device more convenient than Graffiti: a
  keyboard for example, one device exists that allow you to plug a PS/2
  keyboard in your palm: Happy Hacking cradle Specially for the Palm.

  PFU <http://www.pfuca.com/products/hhkb/hhcindex.html> Happy Hacking
  sells a PS/2 adapter for the Palm, thus one should be able to hook any
  PS/2 keyboard on this device.  It is battery ( 2 AA ) powered.

  It seems that someone has managed to get a twiddler keyboard working
  with the PalmPilot.  If you want to do land navigation it exists an
  electronic compass you can plug into your palm it is called Palm
  Navigator and it is manufactured by Precision Navigation
  <http://www.precisionnav.com> They even sell a weather station.

  If you have more money to spend or want more precision you can
  purchase a GPS receiver called Earthmate; it is manufactured by
  Precision Navigation <http://www.delorme.com> Some of you may want a
  software only solution: this can be done.  If you have some highly
  specialized needs like commuting without having the subway map and
  want a readily made solution you can use a program like Route Expert,
  I use it on a daily basis, it works great with Paris's subway and I
  will test it with Berlin's subway at the end of the year ( of course
  it exists other programs but this one is the one I am using ). I guess
  everyone can find the North using the sun and a wirtswatch, a
  PalmPilot can do it with more precision using readymade programs such
  as T.J's Sun-Compass ( once again there exists other programs but this
  one is the one I am using ).

  The most important with the PalmPilot for the Linux community is the
  fact that there exists two ports of Linux for it ( DragonBall is a
  member of the 68000 family after all ). One is GPLed

  You can find more information at : uClinux <http://www.uclinux.org>

  the second one is commercial, it is based in Korea.  WindStone
  <http://www.oski.co.kr> it is based on uClinux and it is coming  with
  its own GUI and widgets.

  Thus with the next generation of Palms, the CPU speed will be twice
  today's speed, and with Linux on board we will be able to run a lot of
  software that are hardware independent and have been written for
  today's x86 Linux based wearables.


  14.2.  PDAs runing Linux.

  Samsung displayed a PDA named theYopi
  <http://www.sem.samsung.co.kr/eng/product/digital/pda/> runing Linux.
  It is an ARMLinux based PDA, 32 MB RAM, featuring a voice recorder,
  mp3 player,IrDa port, compact flash slot, a 4" color TFT and
  HandWritting Recognition, plus Serial and USB interface. Word has
  spread that it should be sold this summer but unti then wait and see.

  It exists a  Mips based PDA info Center
  <http://www.freebsd.org/~imp/pdamips.html> This site focuses both on
  NetBSD and LinuxCE on MIPS based PDAs.

  You can find some information on the  LinuxCE
  <http://www.linuxce.org> port; and you may wish to read the  LinuxCE
  FAQ <http://linuxce.2gn.com/faq> With theses PDAs one should be able
  to consider building a nice PDA based Wearable.
  15.

  How to carry my wearable ?

  Depending on your wearable's family ( eg Palm, palmtop computer,
  laptop based, PC/104 ) there seem to be 3 convenient ways of carrying
  it around.  You can carry it on tour wrist, or in a backpack or you
  can hang it on your waistband.



  16.

  Applications with Wearables.

  As a rule of thumb the first people who are going to use extensively
  the wearables are the people whose work is a matter of life and death.


  16.1.

  In the army now.

  It is very important in an army to have an edge other the enemy, that
  is what we have always seen in history, and moreover the army is known
  to spend vast amount of money in order to get this edge.

  Some years ago the infantryman was ordered to carry different  pieces
  of ordnance that came from different sources and were not part of a
  whole thing, and to try to do his best with theses ( looks like
  Frankenstein to me ). With theses new projects the infantryman is the
  centerpiece of a coherent, complementary weapons and equipment system.


  ·  Australian Army.


     In Australia there is a program called Land 125 Soldier Combat
     System ( formerly "Wundurra" ( the aboriginal word for Warrior ) ),
     there is some information on DTSO
     <http://www.dsto.defence.gov.au/>'s website; and according to the
     ATSE  <http://www.atse.org.au/>this project should be on phase 2 on
     year 2000/2001.

     According to DTSO the soldiers should have intra-section radios,
     night vision and sighting capability and head up display.


  ·  French Forces.

     In France there is a project called FELIN ( Fantassin à Equipement
     et Liaison Integrées ( Foot soldier with integrated equipment and
     links ) )

     in order to enhance the efficiency of the soldier a set of devices
     had been developed with very careful limitations : historically the
     foot soldier has been a beast of burden, thus the FELIN project
     wishes to limit its load at 25kg. The soldier has got a radio link,
     a computer and a camera on his weapon ( allowing him to open fire
     from cover ). The display is done  with a monocular HMD.

  ·  UK Forces.

     The FIST ( Future Integrated Soldier Technology ) project: Early
     tests were conducted on Salisbury Plain to determine if the soldier
     could access information either 'Head Up' ( in a helmet display ),
     'Head Down' ( on a wrist mounted display ), via a palmtop computer
     or if necessary  a map

     lessons learned ( in L'armement issue 67 September 1999 )

  ·  There is no scope for enhancing soldier performance through the
     provision of tactical information unless the soldier can access
     information 'on the move'

  ·  The preference, both by day and night was the helmet display.

     The FIST Digitization Trials will be conducted on Salisbury Plain
     in June and November 2000. The June trial addresses information
     flow, the November trial will address the benefits of enhanced
     information to determine if there is a consequent increase in the
     'Tempo of Operation'.

  ·  US Forces


  ·  The land warrior program

     It is a system made of 5 subsystems cooperating together.

  ·  A Pentium Computer/Radio Subsystem (C/RS) made by Motorola
     featuring an integrated GPS receiver

  ·  The Protective Clothing and Individual Equipment Subsystem (PCIE)
     made by Gentex

  ·  The Weapon Subsystem (WS) made by Raytheon

  ·  The Software Subsystem made by Raytheon

  ·  The Integrated Helmet Assembly Subsystem (IHAS) made by Honeywell

     The location of each squad member will be available through the
     IHAS, as well as digitized maps and tactical information.  Every
     soldier will have an integrated GPS as well as video recording
     capabilities.  Of course the soldier will have night vision
     capability as well as deported sighting. Tests should take place
     during year 2000.  More info on the Land Warrior program at

     http://www.sbccom.army.mil/programs/lw/index.htm
     <http://www.sbccom.army.mil/programs/lw/index.htm >

     ( There is even a FAQ and pictures ).  AFAIK this is going to be
     the biggest test for the wearable concept because the Army is
     planning to purchase 34000 units plus spares.

  ·  The navy.

     During the summer 1999 news poured that the US Navy tested the
     Virtual Retinal Display at Hawaii. The explanation is that there
     doesn't seem to be enough space in the fighting ships because of
     the numerous CRT, so it is conceivable for the crew to wear VRDs

     Needless to say, that some very low profile and highly specialized
     units should have adopted the wearable concept but as far as we
     cannot have evidence we can only speculate on that.

  16.2.

  At the hospital

  The Microvison <http://www.mvis.com>'s VRD has been delivered
  <http://www.mvis.com/2-medi.htm> to the Wallace Kettering Neuroscience
  Institute, Dayton Ohio, for neurosurgery applications.  This is not a
  full featured wearable solution but it is a big step toward the
  adoption of wearables in health care activity.  ( on the website you
  can view a simulated image <http://www.mvis.com/dr_pov4jpg.htm>  ).



  16.3.

  With the firefighters

  Firefighters are using thermal cameras in order to see through the
  smoke, in the next years theses devices should be miniaturized and
  with a wearable firefighters should have both hands free and will have
  real time access to data such as the map of the building and numerous
  helpful informations.


  16.4.

  Wearable for the disabled.

  One can easily think that a wearable computer can be very helpfull for
  the disabled people, for example for blind people a wearable with a
  GPS receiver, some maps of the surroundings and even more, interacting
  with its surroundings by means of active beacons can be a very good
  substitute for a dog, the elements exists for a long time.

  This should be easily done : the linux comunity has good text to
  speech applications, voice recognition is quite ready for this
  application , the IrDA or Modem radio drivers are OK, the same applies
  to the GPS programs, we have to develop an electronic blind walking
  stick in order to detect the obstacles at a much reater range and
  last, but not the least to convince the autorities.


  17.

  A borg's life.

  This section deals with Human-Human interaction.  As the wearable is
  quite new for the layman one has to expect some strange reactions from
  the other people.  When I go out and read my PalmPilot's screen while
  walking or in the subway people have one of the following reactions :

  ·  No reaction: because they are in their own world or because they
     don't care.

  ·  Curiosity: they come to me and ask me questions like "what it is",
     "what are you doing with it" and "how much does it cost ?"

  ·  Disdain : they may think I want to draw attention.

  ·  Hostility/Fear : "this guy is nut: avoid him".

     Steve Mann Gave an interview in the New Scientist magazine and as
     he was one of the first to test the waters, so he has a long
     experience in this field.  The second problem is that the
     wearable's hardware is quite expensive and some predators will spot
     a new device that can be easily stolen and sold at a good price, or
     just in order to have one of them.  As a conclusion you have to be
     very cautious.


  18.  Nanotechnology: one step beyond.

  At the time of this writting, we are in a transition era: the
  nanotechnology is an emerging science that is going to change a lot of
  things in the computing field.

  For more information on nanotechnology, the http://www.nanodot.org
  website is a good place to start.



  19.

  Sources of Information.


  19.1.

  Non commercial


  A good starting point to gather information is to subscribe to the
  wear-hard@haven.org mailing list, you have to send a message with the
  word subscribe in the subject to wear-hard-request@haven.org.

  The archive of this mailing list is mirrored at Wearable Central
  <http://wearables.blu.org> This site was founded to be an archive
  center for the mailing list and the newsgroup.  It is maintened by R.
  Paul McCarty.

  You can also read one of the very good FAQs such as the wearcompfaq
  <http://wearcomp.org/wearcompfaq.html> or you may go to the wearable
  webring  <http://www.webring.org/cgi-bin/webring?ring=wearit;list>  (
  at the time of this writting the webring lists 35 sites ).

  19.2.

  Commercial.

  You can find information on the web sites of the company cited in the
  various sections of this document and as stated earlier in this
  document : The companies quoted here are just for your information
  only, I do not endorse any of their product, this just in order to
  help you.


  19.3.  Reading.

  Some science fiction books can be a good introduction to Wearable
  computing. Among other books one can think of ( alphabetical listing
  ):

  ·  Diamond Age by Neal Stephenson ( a lot of nanotechnology too ).

  ·  Snow Crash by Neal Stephenson

  ·  Virtual Light by Willian Gibson


  20.

  To do List.

  This section is about things that have to be done for the next
  releases if you wish to contribute it is a good place to look at.
  ·  Organic Leds are very interesting, I should cover theses too.

  ·  To expand the input/visual output sections.

  ·  To expand and reorder the advocacy section.

  ·  To have an "in the car" section.

  ·  The concept of an UW wearable seems viable lets think about it.

  ·  List and describe all projects.

  ·  List and describe all products.

  ·  To get some sleep ;-).


  21.

  Revision History.


  ·  v 0.0.9 November 2000, 3rd release

  ·  Fixed: What is a Wearable anyway section: Typo in URLs

  ·  Expanded: What CPU section.

  ·  Expanded: Power supply section.

  ·  Rewritten: OS section.

  ·  Rewritten: Sulawesi section rewritten by The sulawesi project
     founder Neill Newman.  <njnewm@essex.ac.uk>
     <mailto:njnewm@essex.ac.uk>

  ·  Added: CLI only section written by Manu Coutris.  <coutris@ie2.u-
     psud.fr> <mailto:coutris@ie2.u-psud.fr>

  ·  Added: One step beyond section.

  ·  v 0.0.7 March 2000, second release.

  ·  v 0.0.5 December 1999, first release.

  ·  v 0.0.1 November 1999, first draft.

  22.

  Thanks and Credits.


  ·  I would like to thank among other people:

  ·  Werner Heuser <wehe@snafu.de> <mailto:wehe@snafu.de> for the work
     he has done maintaining his Laptop-HOWTO
     <http://www.snafu.de/~wehe/index_li.html>

  ·  The people of the Wearable mailing list which proved to be very
     informative and open minded.

  ·  My friend Manu Coutris for his never ending patience and kindness.

  ·  "Old Crocodile" Virgile for his wyse and smart advices.


  ·  The people of the Wearable community whose discussion and web sites
     strengthen my confidence in the wearable concept.

  ·  Professor Steve Mann for his patience and for beeing one of the
     pionners in the Wearable Computing field. I also wish to thank him
     for the wearcompdef, wearcompfaq and wristwatch wearable links.

  ·  The The Sulawesi project.

     section is written by Neill Newman <njnewm@essex.ac.uk>
     <mailto:njnewm@essex.ac.uk>

  ·  The CLI only.

     section is written by Manu Coutris <coutris@ie2.u-psud.fr>
     <mailto:coutris@ie2.u-psud.fr>


  23.

  Copyright, Disclaimer and Trademarks


  Copyright © 1999-2000 by Lionel, trollhunter Bouchpan-Lerust-Juéry.
  This document may be distributed under the terms set forth in the GNU
  Free Documentation Licence http://www.gnu.org/copyleft/fdl.txt
  <http://www.gnu.org/copyleft/fdl.txt> .

  This documentation is distributed in the hope that it will be useful,
  but without any warranty. The information in this document is correct
  to the best of my knowledge, but there's a always a chance I've made
  some mistakes, so don't follow everything too blindly, especially if
  it seems wrong. Nothing here should have a detrimental effect on your
  computer, but just in case I take no responsibility for any damages
  ocurred from the use of the information contained herein.

  In this document you will encounter some commercial products and
  brands. Theses products are cited for information purpose, it is not
  an endorsement from the author. The trademarks belong to their
  respective owners.

  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.1 or
  any later version published by the Free Software Foundation; with the
  Invariant Sections being : "Foreword", "What is a Wearable anyway ?",
  "Advocacy", "What CPU ?", "Power supply", "Os.", "The Sulawesi
  project.", "CLI only.", "Input", "Audio Output", "Visual Output",
  "Comms.", "How can I have my Wearable ?", "PalmPilot and its clone  (
  IBM, HandSpring, TRG ): a new breed of wearables.", "How to carry my
  wearable ?", "Applications with Wearables.", "A borg's life.",
  "Nanotechnology: one step beyond.", "Sources of Information.", "To do
  List.", "Revision History.", "Thanks and Credits.",

  , with the Front-Cover Texts being "title" and "abstract" , and with
  no Back-Cover Texts .



